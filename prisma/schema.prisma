generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(cuid())
  email        String  @unique
  name         String
  isSubscribed Boolean @default(false)
  customerId   String? @unique // Stripe customer ID

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subscription Subscription?
  workouts     Workout[]
  programs     Program[]
}

model Subscription {
  id        String   @id @default(cuid())
  userId    String   @unique
  planId    String
  price     Int      @default(0)
  startDate DateTime @default(now())
  endDate   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Workout {
  id          String   @id @default(cuid())
  userId      String?
  title       String   @unique
  description String
  exercises   String[]
  pr          Int?
  minutes     Int?
  seconds     Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user      User?   @relation(fields: [userId], references: [id])
  programId String?
  Day       Day?    @relation(fields: [dayId], references: [id])
  dayId     String?

  @@index([userId])
}

model Program {
  id        String   @id @default(cuid())
  title     String   @unique
  days      Day[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
}

model Day {
  id        String    @id @default(cuid())
  title     String
  workouts  Workout[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  Program   Program? @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId String?
}
